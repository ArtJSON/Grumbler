import styles from "./SettingsPage.module.scss";
import Head from "next/head";
import { useForm, zodResolver } from "@mantine/form";
import { Textarea, TextInput } from "@mantine/core";
import { z } from "zod";
import { api } from "../../utils/api";

// interface SettingsPagePropsType {}

const schema = z.object({
  displayName: z
    .string()
    .min(3)
    .max(32)
    .regex(/^\S+(?: \S+)*$/),
  username: z
    .string()
    .min(3)
    .max(32)
    .regex(/^[a-z0-9]+$/),
  bio: z.string().max(320),
});

export default function SettingsPage() {
  const form = useForm({
    validate: zodResolver(schema),
    initialValues: {
      displayName: "",
      username: "",
      bio: "",
    },
  });

  const updateSettingsMutation = api.user.updateSettings.useMutation();

  return (
    <>
      <Head>
        <title>Grumbler | Settings</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.settingsPage}>
        <form
          onSubmit={form.onSubmit((values) => {
            updateSettingsMutation.mutate(values);
          })}
        >
          <TextInput
            {...form.getInputProps("displayName")}
            label="Display name"
          />
          <TextInput {...form.getInputProps("username")} label="Username" />
          <Textarea {...form.getInputProps("bio")} label="Bio" />
          <button type="submit">Save changes</button>
        </form>
      </div>
    </>
  );
}

//export const getServerSideProps: GetServerSideProps = async () => ();
